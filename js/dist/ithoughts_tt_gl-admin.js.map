{"version":3,"sources":["../src/ithoughts_tt_gl-admin.js"],"names":["selfCalling","ithoughts","$","itg","iThoughtsTooltipGlossary","updateStyle","keepDefaults","themename","target","styles","concat","constructor","name","qtip","join","$d","ready","onDocumentReady","show","events","updateActivationPreview","updateActivationPreviewWrapper","triggerI","animInI","animOutI","animTimeI","trigger","val","$demotip","animationFunctions","in","out","prop","parseInt","e","error","bind","updateStyleWrapper","styleI","shadowI","roundedI","event","style","is","push","doWrapInit","verbosityInput","verbosityLabel","verbosityLabels","data","on","onInput","text","iThoughts","v5"],"mappings":"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","file":"ithoughts_tt_gl-admin.js","sourcesContent":["/**\n * @file Old file. To merge\n *\n * @author Gerkin\n * @copyright 2016 GerkinDevelopment\n * @license https://www.gnu.org/licenses/gpl-3.0.html GPLv3\n * @package ithoughts-tooltip-glossary\n *\n * @version 2.7.0\n */\n\n'use strict';\n\n( function selfCalling( ithoughts ) {\n\tvar $ = ithoughts.$,\n\t\titg = iThoughtsTooltipGlossary;\n\n\titg.updateStyle = ( keepDefaults, themename, target ) => {\n\t\tvar styles = [ `qtip-${ themename }` ];\n\t\tif ( true === keepDefaults ) {\n\t\t\tstyles = [\n\t\t\t\t'ithoughts_tt_gl-tooltip',\n\t\t\t\t'qtip-pos-br',\n\t\t\t].concat( styles );\n\t\t} else if ( typeof keepDefaults !== 'undefined' && keepDefaults && 'Array' === keepDefaults.constructor.name ) {\n\t\t\tstyles = keepDefaults.concat( styles );\n\t\t}\n\n\t\ttarget.qtip( 'option', 'style.classes', styles.join( ' ' ));\n\t};\n\n\tithoughts.$d.ready( function onDocumentReady() {\n\t\t$( '[data-tooltip-id=\"exampleStyle\"]' ).qtip( 'api' ).show();\n\t\tvar events = 'change blur keyup mouseup',\n\t\t\tupdateActivationPreview = ( function updateActivationPreviewWrapper() {\n\t\t\t\tvar triggerI = $( '#qtiptrigger' ),\n\t\t\t\t\tanimInI = $( '#anim_in' ),\n\t\t\t\t\tanimOutI = $( '#anim_out' ),\n\t\t\t\t\tanimTimeI = $( '#anim_time' );\n\t\t\t\treturn function updateActivationPreview() {\n\t\t\t\t\tvar trigger = triggerI.val();\n\t\t\t\t\ttry {\n\t\t\t\t\t\t$demotip\n\t\t\t\t\t\t\t.qtip( 'option', 'show.event', trigger )\n\t\t\t\t\t\t\t.qtip( 'option', 'hide.event', ( 'responsive' === trigger ) ? 'responsiveout' : 'mouseleave' )\n\t\t\t\t\t\t\t.qtip( 'option', 'show.effect', itg.animationFunctions.in[animInI.val()])\n\t\t\t\t\t\t\t.qtip( 'option', 'hide.effect', itg.animationFunctions.out[animOutI.val()])\n\t\t\t\t\t\t\t.prop( 'animation_duration', parseInt( animTimeI.val()||500 ));\n\t\t\t\t\t} catch ( e ) {\n\t\t\t\t\t\titg.error( e );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t})(),\n\t\t\t$demotip = $( '#qtip-exampleStyle' );\n\t\t$( '#qtiprounded,#qtipshadow,#qtipstyle' ).bind( events, ( function updateStyleWrapper() {\n\t\t\tvar styleI = $( '#qtipstyle' ),\n\t\t\t\tshadowI = $( '#qtipshadow' ),\n\t\t\t\troundedI = $( '#qtiprounded' );\n\t\t\treturn function updateStyle( event, themename ) {\n\t\t\t\tif ( 'undefined' == typeof themename ) {\n\t\t\t\t\tthemename = styleI.val();\n\t\t\t\t}\n\t\t\t\tvar style = [\n\t\t\t\t\t'ithoughts_tt_gl-tooltip',\n\t\t\t\t\t'qtip-pos-br',\n\t\t\t\t];\n\t\t\t\tif ( shadowI.is( ':checked' )) {\n\t\t\t\t\tstyle.push( 'qtip-shadow' );\n\t\t\t\t}\n\t\t\t\tif ( roundedI.is( ':checked' )) {\n\t\t\t\t\tstyle.push( 'qtip-rounded' );\n\t\t\t\t}\n\t\t\t\titg.updateStyle( style, $( '#qtipstyle' ).val(), $demotip );\n\t\t\t};\n\t\t})());\n\t\t$( '#tooltips,#qtiptrigger,#anim_in,#anim_out,#anim_time' ).bind( events, updateActivationPreview );\n\t\t( function doWrapInit() {\n\t\t\tvar verbosityInput = $( '#verbosity' ),\n\t\t\t\tverbosityLabel = $( '#ithoughts_tt_gl-verbosity_label' ),\n\t\t\t\tverbosityLabels = verbosityLabel.data( 'labels' );\n\t\t\tverbosityInput.on( 'input', function onInput() {\n\t\t\t\tverbosityLabel.text( verbosityLabels[$( this ).val()]);\n\t\t\t}).trigger( 'input' );\n\t\t}());\n\t});\n})( iThoughts.v5 );\n"]}