{"version":3,"sources":["../src/ithoughts_tt_gl-tinymce-forms.js"],"names":["selfCalling","ithoughts","$","$d","$w","itge","iThoughtsTooltipGlossaryEditor","ready","onDocumentReady","formType","length","error","initTab","jqobj","cb","click","onClickTab","parent","find","removeClass","addClass","index","children","filter","initTipForm","tooltipOpts","callback","prop","on","switchMode","id","value","hide","show","keyup","removeEditor","editorId","tinymce","EditorManager","execCommand","e","iThoughtsTooltipGlossary","warn","editors","findEditor","editor","closeForm","data","setTimeout","waitRemoveEditor","finishTipTinymce","initSubEditor","$editors","each","findNewEditor","getAttribute","newId","Math","random","toString","replace","substr","setAttribute","text","init","selector","menubar","external_plugins","code","base_tinymce","wordcount","plugins","toolbar","min_height","height","resize","intervalContent","setInterval","waitSubTinyMCELoaded","subeditor","get","getDoc","getBody","log","JSON","stringify","clearInterval","setContent","selectImage","mediaFrame","wp","media","frame","state","library","type","multiple","insertImage","json","first","toJSON","val","url","link","html","caption","open","initAutoComplete","input","completerHolder","completerHolderContainer","searchedString","request","losefocustest","waitedForFocus","is","searchMatchingRes","startsWith","contains","terms","map","mapTerms","element","indx","title","toLowerCase","indexOf","slug","push","searchResults","concat","unique","item","pos","self","empty","i","thislang","append","parseHTML","content","resizeWindow","selectCompletion","currentTarget","top","offset","scrollTop","bottom","css","maxHeight","focusin","abort","removeAccents","ajax","admin_ajax","method","dataType","action","search","complete","res","response","responseJSON","success","searched","info","removeAttribute","initAdvancedConfiguration","$opts","$tooltip","skip","span","$form","getOptsObject","form","formElems","elements","tristates","valid","formFields","attributes","attributesList","getAttributeValue","toArray","opts","types","validity","focus","getTristateValue","extend","serializeInputsObject","dataset","serializeObject","arrK","arrV","j","J","min","prefix","filterPrototypeInputs","closest","checkRemoveAttr","thisInput","$container","otherInput","filterNotThisInput","ensureRemoveContainer","attr","trim","document","activeElement","remove","attrVal","change","onTristateChange","s","ts","checked","indeterminate","showAttributesWindow","closeDiscardAttributesWindow","closeAcceptAttributesWindow","onQtipKeepOpenChange","modeInput","textInput","mtInput","oldValue","lockQtipTrigger","disabled","onPositionMyChange","base","inputV","inputH","inputsHV","inputS","changePositionMy","onPositionAtChange","bind","onKvPairAdd","$invalidInputs","eq","call","$prototype","$clone","clone","newIdParts","Date","getTime","setForOrId","$this","hasClass","tagName","blur","videoUrlChanged","videodata","formatType","formats","youtube","regex","embed","video","dailymotion","direct","match","validate","glossary_id","disable_auto_translation","tooltip_content","getContent","mediatip_type","mediatip_content","mediatip_caption","mediatip_link","initListForm","initGroupsPicker","$ids","$text","$groupsPicker","$catchEvent","$checkboxes","onGroupsPickerFocus","toggleClass","catchEvent","stopImmediatePropagation","off","one","onGroupCheckboxChanged","$checked","texts","ids","checkedAppendToArray","join","onClickValidate","alpha","group","desc","cols","finishListTinymce","onClickDiscard","iThoughts","v5"],"mappings":"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","file":"ithoughts_tt_gl-tinymce-forms.js","sourcesContent":["/**\n * @file Client-side scripts for handling tooltip creation wizzard in Wordpress TinyMCE\n *\n * @author Gerkin\n * @copyright 2016 GerkinDevelopment\n * @license https://www.gnu.org/licenses/gpl-3.0.html GPLv3\n * @package ithoughts-tooltip-glossary\n *\n * @version 2.7.0\n */\n\n'use strict';\n\n/*global tinymce:false, iThoughtsTooltipGlossaryEditor: false */\n\n( function selfCalling( ithoughts ) {\n\n\t// As usual, assign our most comon globals usage to local ones for minification\n\tvar $\t\t= ithoughts.$,\n\t\t$d\t\t= ithoughts.$d,\n\t\t$w\t\t= ithoughts.$w,\n\t\titge\t= iThoughtsTooltipGlossaryEditor;\n\t$d.ready( function onDocumentReady() {\n\t\tvar formType = '';\n\t\t// Depending on the ID present, we can deduce if we are in TIP or LIST creation/edition mode.\n\t\tif ( 1 === $( '#ithoughts_tt_gl-tooltip-form-container' ).length ) {\n\t\t\tformType = 'TIP';\n\t\t} else if ( 1 === $( '#ithoughts_tt_gl-list-form-container' ).length ) {\n\t\t\tformType = 'LIST';\n\t\t} else {\n\t\t\titge.error( 'Does not contains a tooltip form nor a list form, exit' );\n\t\t\treturn;\n\t\t}\n\n\t\t// ##### `initTab`: Set up a tab switcher element\n\t\t/**\n\t\t * @function initTab\n\t\t * @description Set up a tab switcher element\n\t\t * @author Gerkin\n\t\t * @param {jQuery} jqobj jQuery selector containing the tabs triggers\n\t\t * @param {Function} [cb] Function to execute with cb( newIndex )\n\t\t * @returns {undefined}\n\t\t */\n\t\tfunction initTab( jqobj, cb ) {\n\t\t\tjqobj.click( function onClickTab() {\n\t\t\t\t// First, clean the `active` class on all siblings, then set it only on event emitter\n\t\t\t\t$( this ).parent().find( '.active' ).removeClass( 'active' );\n\t\t\t\t$( this ).addClass( 'active' );\n\n\t\t\t\t// Then, we check the index of the clicked element (`this`) in the parent, and we set active the tab with the same index\n\t\t\t\tvar index = $( this ).index();\n\t\t\t\t$( this ).parent().parent().find( ' > .active' ).removeClass( 'active' );\n\t\t\t\t$( $( this ).parent().parent().children()[index + 1]).addClass( 'active' );\n\n\t\t\t\t// Then we try to call the callback (if set)\n\t\t\t\tcb && cb( index );\n\t\t\t});\n\t\t\t// Self-set\n\t\t\tjqobj.filter( '.active' ).click();\n\t\t}\n\n\t\t// ## Tip form\n\t\tif ( 'TIP' === formType ) {\n\t\t\t( function initTipForm() {\n\t\t\t\t// Define the container for tooltip options in parent scope, so it can be used accross several events\n\t\t\t\tvar tooltipOpts;\n\t\t\t\t// Initialize the tab switcher between mode Glossary, Tooltip & Mediatip\n\t\t\t\tinitTab( $( '#ithoughts_tt_gl-tooltip-form .tabs li' ), function callback( index ) {\n\t\t\t\t\t// Only Glossary tooltip (tab @ index 0) disable the custom link editor\n\t\t\t\t\t$( '#ithoughts_tt_gl_link' ).prop( 'disabled', 0 === index );\n\t\t\t\t});\n\t\t\t\t// Initialize the tab switcher of advanced options\n\t\t\t\tinitTab( $( '#ithoughts_tt_gl-tooltip-form-options .tabs li' ));\n\t\t\t\t// Mode switcher for mediatips.  Hide all except the selected mode\n\t\t\t\t$( '.modeswitcher' ).on( 'click keyup', function switchMode() {\n\t\t\t\t\tvar id = this.id;\n\t\t\t\t\t$( `[data-${  id  }]:not([data-${  id  }=\"mediatip-${  this.value  }-type\"])` ).hide();\n\t\t\t\t\t$( `[data-${  id  }~=\"mediatip-${  this.value  }-type\"]` ).show();\n\t\t\t\t}).keyup();\n\n\t\t\t\t// ##### `removeEditor`: Clean an editor\n\t\t\t\t/**\n\t\t\t\t * @function removeEditor\n\t\t\t\t * @description Clean an editor\n\t\t\t\t * @author gerkin\n\t\t\t\t * @param   {String} editorId Id of the editor to delete\n\t\t\t\t * @returns {undefined}\n\t\t\t\t */\n\t\t\t\tfunction removeEditor( editorId ) {\n\t\t\t\t\t// Sometimes (depending on the browser AFAIK), TinyMCE fails to execute the command to remove an editor. We then have to clean its data manually\n\t\t\t\t\ttry {\n\t\t\t\t\t\ttinymce.EditorManager.execCommand( 'mceRemoveEditor', true, editorId );\n\t\t\t\t\t} catch ( e ) {\n\t\t\t\t\t\tiThoughtsTooltipGlossary.warn( 'Force cleaning needed: ', e );\n\t\t\t\t\t\ttinymce.EditorManager.editors = tinymce.EditorManager.editors.filter( function findEditor( editor ) {\n\t\t\t\t\t\t\treturn editor.id !== editorId;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// ##### `closeForm`: Clean the form, then call the callback function\n\t\t\t\t/**\n\t\t\t\t * @function closeForm\n\t\t\t\t * @description Clean the form, then call the callback function\n\t\t\t\t * @author gerkin\n\t\t\t\t * @param {Object} data Data of the tooltip\n\t\t\t\t * @returns {undefined}\n\t\t\t\t */\n\t\t\t\tfunction closeForm( data ) {\n\t\t\t\t\tsetTimeout( function waitRemoveEditor() {\n\t\t\t\t\t\tremoveEditor( 'ithoughts_tt_gl-tooltip-content' );\n\t\t\t\t\t}, 500 );\n\t\t\t\t\titge.finishTipTinymce( data );\n\t\t\t\t}\n\n\t\t\t\t// ### TinyMCE editor for Tooltips\n\t\t\t\t( function initSubEditor( $editors ) {\n\t\t\t\t\t// Initialize the TinyMCE editor inside the Tooltip tab\n\t\t\t\t\t$editors.each( function findNewEditor( index, editor ) {\n\t\t\t\t\t\t// Find a free id. If our editor does not have an ID, we have to generate one\n\t\t\t\t\t\twhile ( null == editor.getAttribute( 'id' )) {\n\t\t\t\t\t\t\tvar newId = `editor${  Math.random().toString( 36 ).replace( /[^a-z]+/g, '' ).substr( 0, 10 ) }`;\n\t\t\t\t\t\t\t// If this editor ID is free, then set it. Else, loop using the parent `while`\n\t\t\t\t\t\t\tif ( 0 === $( newId ).length ) {\n\t\t\t\t\t\t\t\teditor.setAttribute( 'id', newId );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar editorId = editor.getAttribute( 'id' );\n\t\t\t\t\t\t// Save the current text in the not-yet-TinyMCE editor. It will be used later to restore the content\n\t\t\t\t\t\tvar text = editor.value;\n\t\t\t\t\t\t// Do effective call to tinymce & init the editor\n\t\t\t\t\t\ttinymce.init({\n\t\t\t\t\t\t\tselector:         `#${  editorId }`,\n\t\t\t\t\t\t\tmenubar:          false,\n\t\t\t\t\t\t\texternal_plugins: {\n\t\t\t\t\t\t\t\tcode:      `${ itge.base_tinymce  }/code/plugin.min.js`,\n\t\t\t\t\t\t\t\twordcount: `${ itge.base_tinymce  }/wordcount/plugin.min.js`,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tplugins: 'wplink',\n\t\t\t\t\t\t\ttoolbar: [\n\t\t\t\t\t\t\t\t'styleselect | bold italic underline link | bullist numlist | alignleft aligncenter alignright alignjustify | code',\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tmin_height: 70,\n\t\t\t\t\t\t\theight:     70,\n\t\t\t\t\t\t\tresize:     false,\n\t\t\t\t\t\t});\n\t\t\t\t\t\t// **Restore the content**\n\t\t\t\t\t\tvar intervalContent = setInterval( function waitSubTinyMCELoaded() {\n\t\t\t\t\t\t\tvar subeditor = tinymce.get( editorId );\n\t\t\t\t\t\t\t// Check if the subeditor is fully initialized. If that's the case, set its content & clear interval\n\t\t\t\t\t\t\tif ( subeditor && subeditor.getDoc() && subeditor.getBody()) {\n\t\t\t\t\t\t\t\titge.log( 'Initing subeditor with content ', JSON.stringify( text ));\n\t\t\t\t\t\t\t\tclearInterval( intervalContent );\n\t\t\t\t\t\t\t\tsubeditor.setContent( text.replace( /&/g, '&amp;' ));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, 50 );\n\t\t\t\t\t});\n\t\t\t\t}( $( '#ithoughts_tt_gl-tooltip-form-container .tinymce' )));\n\n\t\t\t\t// ### Media library for Mediatips\n\t\t\t\t$( '#ithoughts_tt_gl_select_image' ).click( function selectImage() {\n\t\t\t\t\t// On click on `#ithoughts_tt_gl_select_image` (the button in mediatip), use the WP media API to get a media\n\t\t\t\t\t// > This code was copy/pasted. It may be improveable\n\t\t\t\t\tvar mediaFrame = wp.media({\n\t\t\t\t\t\tframe:   'post',\n\t\t\t\t\t\tstate:   'insert',\n\t\t\t\t\t\tlibrary: {\n\t\t\t\t\t\t\ttype: [ 'audio', 'video', 'image' ],\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmultiple: false,\n\t\t\t\t\t});\n\n\t\t\t\t\t// **On validation of media library**\n\t\t\t\t\tmediaFrame.on( 'insert', function insertImage() {\n\t\t\t\t\t\t// Get the infos of the first selected element\n\t\t\t\t\t\tvar json = mediaFrame.state().get( 'selection' ).first();\n\t\t\t\t\t\t// If nothing selected, return\n\t\t\t\t\t\tif ( null == json ) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tjson = json.toJSON();\n\t\t\t\t\t\t// Encode datas in the JSON input\n\t\t\t\t\t\t$( '#image-box-data' ).val( JSON.stringify({\n\t\t\t\t\t\t\turl:  json.url,\n\t\t\t\t\t\t\tid:   json.id,\n\t\t\t\t\t\t\tlink: json.link,\n\t\t\t\t\t\t}));\n\t\t\t\t\t\t// Display selected image\n\t\t\t\t\t\t$( '#image-box' ).html( `<img src=\"${  json.url  }\"/>` );\n\t\t\t\t\t\t$( '#mediatip_caption' ).val( json.caption );\n\t\t\t\t\t\t$( '#ithoughts_tt_gl_link' ).val( json.link );\n\t\t\t\t\t});\n\n\t\t\t\t\t// Open the media library\n\t\t\t\t\tmediaFrame.open();\n\t\t\t\t});\n\n\t\t\t\t// ### Autocomplete for Glossaries\n\t\t\t\t( function initAutoComplete() {\n\t\t\t\t\tvar input = $( '#glossary_term' ),\n\t\t\t\t\t\tcompleterHolder = $( '#glossary_term_completer' ),\n\t\t\t\t\t\tcompleterHolderContainer = $( '.glossary_term_completer_container' ),\n\t\t\t\t\t\tsearchedString = '',\n\t\t\t\t\t\trequest = null;\n\n\t\t\t\t\t// ##### `losefocustest`: Check if the completer holder or the input has the focus\n\t\t\t\t\tfunction losefocustest() {\n\t\t\t\t\t\t// The timeout is required to let some time to the browser to change the focus status of the elements\n\t\t\t\t\t\tsetTimeout( function waitedForFocus() {\n\t\t\t\t\t\t\tif ( !completerHolder.find( '*:focus' ).length && !input.is( ':focus' )) {\n\t\t\t\t\t\t\t\t// Hide the `completerHolder`\n\t\t\t\t\t\t\t\tcompleterHolderContainer.addClass( 'hidden' );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, 100 );\n\t\t\t\t\t}\n\t\t\t\t\t// ##### `searchMatchingRes`: Does all the completion work from retrieved term catalog\n\t\t\t\t\tfunction searchMatchingRes() {\n\t\t\t\t\t\t// First, we filter terms contained in the global hash `iThoughtsTooltipGlossaryEditor`. Those terms will be splitted in 2 categories:\n\t\t\t\t\t\t// * those which **starts** with the searched string\n\t\t\t\t\t\t// * those which **contains** the searched string\n\t\t\t\t\t\tvar startsWith = [];\n\t\t\t\t\t\tvar contains = [];\n\t\t\t\t\t\titge.terms.map( function mapTerms( element ) {\n\t\t\t\t\t\t\tvar indx = element.title.toLowerCase().indexOf( searchedString );\n\t\t\t\t\t\t\tif ( -1 === indx )\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tindx = element.slug.toLowerCase().indexOf( searchedString );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ( -1 === indx ) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t} else if ( 0 === indx ) {\n\t\t\t\t\t\t\t\tstartsWith.push( element );\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcontains.push( element );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\t// Then, concat both arrays to have the terms starting with the search before those who just contains the search\n\t\t\t\t\t\tvar searchResults = startsWith.concat( contains ).filter( function unique( item, pos, self ) {\n\t\t\t\t\t\t\treturn self.indexOf( item ) === pos;\n\t\t\t\t\t\t});\n\t\t\t\t\t\t// Clean the search result container, then re-fill it with items\n\t\t\t\t\t\tcompleterHolder.empty();\n\t\t\t\t\t\tvar length = searchResults.length;\n\t\t\t\t\t\tif ( length > 0 ) {\n\t\t\t\t\t\t\tfor ( var i = 0; i < length; i++ ) {\n\t\t\t\t\t\t\t\tvar item = searchResults[i];\n\t\t\t\t\t\t\t\t// If WPML is installed, `item` should contain the property `thislang`. If `thislang` is set to false, then the term is in another language than the current one, and we display it with a particular class\n\t\t\t\t\t\t\t\tif ( typeof item.thislang != 'undefined' && false === item.thislang )\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tcompleterHolder.append( $.parseHTML( `<div tabindex=\"0\" class=\"option foreign-language\" data-id=\"${  item.id  }\" data-excerpt=\"${  item.content  }\"><p><b>${  item.title  }</b><br><em>${  item.slug  }</em></p></div>` ));\n\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\telse\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tcompleterHolder.append( $.parseHTML( `<div tabindex=\"0\" class=\"option\" data-id=\"${  item.id  }\" data-excerpt=\"${  item.content  }\"><p><b>${  item.title  }</b><br><em>${  item.slug  }</em></p></div>` ));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcompleterHolder.append( $.parseHTML( '<p style=\"text-align:center\"><em>No results</em><p>' ));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Once we have filled the search result container, display it and recalculate position\n\t\t\t\t\t\tcompleterHolderContainer.removeClass( 'hidden' );\n\t\t\t\t\t\tsetTimeout( resizeWindow, 25 );\n\t\t\t\t\t\t// On each result, make them selectable\n\t\t\t\t\t\tcompleterHolder.find( '.option' ).on( 'click', function selectCompletion( e ) {\n\t\t\t\t\t\t\t// Set inputs with values provided by the option, then hide the completer holder\n\t\t\t\t\t\t\t$( '[name=\"glossary_term_id\"]' ).val( e.currentTarget.getAttribute( 'data-id' ));\n\t\t\t\t\t\t\tinput.val( $( e.currentTarget ).find( 'p > b' ).text());\n\t\t\t\t\t\t\tcompleterHolderContainer.addClass( 'hidden' );\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t// ##### `resizeWindow`: Set styles of the completer holder\n\t\t\t\t\tfunction resizeWindow() {\n\t\t\t\t\t\t// The `completerHolder` element has to be positionned by JS. In fact, to overflow outside from the modal, it must not be a descendent of the modal. Thus, we can't position it via CSS\n\t\t\t\t\t\tvar top = completerHolder.offset().top - $w.scrollTop();\n\t\t\t\t\t\tvar bottom = $w.height();\n\t\t\t\t\t\tvar height = bottom - top;\n\t\t\t\t\t\tcompleterHolderContainer.css({\n\t\t\t\t\t\t\tmaxHeight: height,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t$w.resize( resizeWindow );\n\n\t\t\t\t\t// **Execute the search action**\n\t\t\t\t\tinput.on( 'keyup focusin', function focusin() {\n\t\t\t\t\t\t// First, check if we don't have any request currently running. If we have one, we have to `abort()` it\n\t\t\t\t\t\tif ( request )\t\t\t\t\t\t{\n\t\t\t\t\t\t\trequest.abort();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Then, compose the search string by removing accents or special characters\n\t\t\t\t\t\tsearchedString = itge.removeAccents( $( this ).val().toLowerCase());\n\t\t\t\t\t\t// Filter with already retrieved items. This is used to react before the real request is sent, then resulsq will be replaced with new retrieved ones\n\t\t\t\t\t\tsearchMatchingRes();\n\t\t\t\t\t\t// Do the request to get elements\n\t\t\t\t\t\trequest = $.ajax({\n\t\t\t\t\t\t\turl:      itge.admin_ajax,\n\t\t\t\t\t\t\tmethod:   'POST',\n\t\t\t\t\t\t\tdataType: 'json',\n\t\t\t\t\t\t\tdata:     {\n\t\t\t\t\t\t\t\taction: 'ithoughts_tt_gl_get_terms_list',\n\t\t\t\t\t\t\t\tsearch: searchedString,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tcomplete: function complete( res ) {\n\t\t\t\t\t\t\t\tvar response = res.responseJSON;\n\t\t\t\t\t\t\t\tif ( 'undefined' == typeof response || !response.success )\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// Check if the response contains a different search string as the current one. It serves as an *outdated filter*\n\t\t\t\t\t\t\t\tif ( response.data.searched !== searchedString ) {\n\t\t\t\t\t\t\t\t\tiThoughtsTooltipGlossary.info( 'Outdated response' );\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// Store terms, then refresh completions\n\t\t\t\t\t\t\t\titge.terms = response.data.terms;\n\t\t\t\t\t\t\t\tsearchMatchingRes();\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t}).on( 'focusout', losefocustest ).on( 'keyup', function keyup() {\n\t\t\t\t\t\tthis.removeAttribute( 'data-term-id' );\n\t\t\t\t\t});\n\t\t\t\t}());\n\n\t\t\t\t// ### Set up Advanced Configuration\n\t\t\t\t( function initAdvancedConfiguration() {\n\t\t\t\t\tvar $opts = $( '#ithoughts_tt_gl-tooltip-form-options' ),\n\t\t\t\t\t\t$tooltip = $( '#ithoughts_tt_gl-tooltip-form' ),\n\t\t\t\t\t\tskip = {\n\t\t\t\t\t\t\tspan: false,\n\t\t\t\t\t\t\tlink: false,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t$form = $( '#ithoughts_tt_gl-tooltip-form-options form' );\n\n\t\t\t\t\t// ##### `getOptsObject`: Get the advanced configuration object\n\t\t\t\t\t/**\n\t\t\t\t\t * @function getOptsObject\n\t\t\t\t\t * @author agermain\n\t\t\t\t\t * @returns {Object} Advanced Opts objects\n\t\t\t\t\t */\n\t\t\t\t\tfunction getOptsObject() {\n\t\t\t\t\t\tvar form = $form[0],\n\t\t\t\t\t\t\tformElems = form.elements,\n\t\t\t\t\t\t\ttristates = {},\n\t\t\t\t\t\t\tvalid = true,\n\t\t\t\t\t\t\tformFields = formElems.length,\n\t\t\t\t\t\t\ti = -1,\n\t\t\t\t\t\t\tattributes = {},\n\t\t\t\t\t\t\tattributesList = $( '#attributes-list option' ).map( function getAttributeValue() {\n\t\t\t\t\t\t\t\treturn this.value;\n\t\t\t\t\t\t\t}).toArray(),\n\t\t\t\t\t\t\topts,\n\t\t\t\t\t\t\ttypes = [ 'span', 'link' ];\n\t\t\t\t\t\t// Check the validity in the whole form\n\t\t\t\t\t\twhile ( ++i < formFields && valid ) {\n\t\t\t\t\t\t\tvar validity = formElems[i].validity;\n\t\t\t\t\t\t\tvalid &= validity.valid;\n\t\t\t\t\t\t\tif ( !validity.valid ) {\n\t\t\t\t\t\t\t\tformElems[i].focus();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Get tristate values to override default booleans\n\t\t\t\t\t\t$form.find( '.ithoughts-tristate' ).each( function getTristateValue() {\n\t\t\t\t\t\t\t$.extend( true, tristates, $( this ).serializeInputsObject({\n\t\t\t\t\t\t\t\t'-1': false,\n\t\t\t\t\t\t\t\t0:    null,\n\t\t\t\t\t\t\t\t1:    true,\n\t\t\t\t\t\t\t}[this.dataset.state]));\n\t\t\t\t\t\t});\n\t\t\t\t\t\t// Once we have retrieved all tristate states, we just have to inject it in the form values\n\t\t\t\t\t\topts = $.extend( true, $form.serializeObject(), tristates );\n\n\t\t\t\t\t\t// Get the key-value attributes on both link & span\n\t\t\t\t\t\tfor ( i = 0; i < 2; i++ ) {\n\t\t\t\t\t\t\tvar type = types[i];\n\t\t\t\t\t\t\t// Create the store\n\t\t\t\t\t\t\tattributes[type] = {};\n\t\t\t\t\t\t\t// Iterate on each category to get the value\n\t\t\t\t\t\t\tfor ( var arrK = opts[`attributes-${  type  }-key`] || [], arrV = opts[`attributes-${  type  }-value`] || [], j = 0, J = Math.min( arrK.length, arrV.length ); j < J; j++ ) {\n\t\t\t\t\t\t\t\tif ( arrK[j] && arrV[j]) {\n\t\t\t\t\t\t\t\t\t// If the key is not in the list of standard DOM attributes, we have to prefix it\n\t\t\t\t\t\t\t\t\tvar prefix = attributesList.indexOf( arrK[j]) > -1 ? '' : 'data-';\n\t\t\t\t\t\t\t\t\tattributes[type][prefix + arrK[j]] = arrV[j];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Clean the options object afterwars\n\t\t\t\t\t\t\tdelete opts[`attributes-${  type  }-value`];\n\t\t\t\t\t\t\tdelete opts[`attributes-${  type  }-key`];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Add the attributes in the options object, then return it;\n\t\t\t\t\t\topts['attributes'] = attributes;\n\t\t\t\t\t\treturn opts;\n\t\t\t\t\t}\n\t\t\t\t\t// ##### `filterPrototypeInputs`: Used in filter to ignore if the element is a prototype. Used in key-value handlings\n\t\t\t\t\t/**\n\t\t\t\t\t * @function filterPrototypeInputs\n\t\t\t\t\t * @description Filtering function for prototypes. Used in key-value handlings\n\t\t\t\t\t * @author gerkin\n\t\t\t\t\t * @returns {Boolean} True if this element is not a prototype\n\t\t\t\t\t */\n\t\t\t\t\tfunction filterPrototypeInputs() {\n\t\t\t\t\t\treturn 0 === $( this ).closest( '.ithoughts-prototype' ).length;\n\t\t\t\t\t}\n\t\t\t\t\t// ##### `checkRemoveAttr`: Remove unused key/value pairs from the key/value editor\n\t\t\t\t\t/**\n\t\t\t\t\t * @function checkRemoveAttr\n\t\t\t\t\t * @description Remove unused key/value pairs from the key/value editor\n\t\t\t\t\t * @author gerkin\n\t\t\t\t\t * @returns {undefined}\n\t\t\t\t\t */\n\t\t\t\t\tfunction checkRemoveAttr() {\n\t\t\t\t\t\t// Separate the current event emitter event from other input\n\t\t\t\t\t\tvar thisInput = $( this ),\n\t\t\t\t\t\t\t$container = thisInput.parent().parent(),\n\t\t\t\t\t\t\totherInput = $container.find( 'input' ).filter( function filterNotThisInput() {\n\t\t\t\t\t\t\t\treturn this !== thisInput.get( 0 );\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t// Wait to let some time to the browser\n\t\t\t\t\t\tsetTimeout( function ensureRemoveContainer() {\n\t\t\t\t\t\t\tvar type = thisInput.closest( '.ithoughts-attrs-container' ).attr( 'data-attr-family' );\n\t\t\t\t\t\t\t// Test & clean the `skip` flag if required\n\t\t\t\t\t\t\tif ( skip[type]) {\n\t\t\t\t\t\t\t\tskip[type] = false;\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Filter values\n\t\t\t\t\t\t\tthisInput.val( thisInput.val().trim());\n\t\t\t\t\t\t\totherInput.val( otherInput.val().trim());\n\n\t\t\t\t\t\t\t// If both values are empty & none have the focus, then remove the container\n\t\t\t\t\t\t\tif ( !thisInput.val() && !otherInput.val() && document.activeElement !== thisInput.get( 0 ) && document.activeElement !== otherInput.get( 0 )) {\n\t\t\t\t\t\t\t\t$container.remove();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, 100 );\n\t\t\t\t\t}\n\n\t\t\t\t\t$opts.find( 'input[type=\"checkbox\"].ithoughts-tristate' ).attr( 'data-state', function getTristateValue( i, attrVal ) {\n\t\t\t\t\t\treturn (( attrVal || 0 ) - 1 ) % 3 + 2;\n\t\t\t\t\t}).change( function onTristateChange() {\n\t\t\t\t\t\t// Do the state rotation\n\t\t\t\t\t\tvar s = $( this ),\n\t\t\t\t\t\t\tts = (( s.attr( 'data-state' )||0 ) - 2 ) % 3 + 1;\n\t\t\t\t\t\ts.attr( 'data-state', ts );\n\t\t\t\t\t\tthis.checked = 1 === ts;\n\t\t\t\t\t\tthis.indeterminate = 0 === ts;\n\t\t\t\t\t}).change();\n\t\t\t\t\t// Bind GUI to show, close or save options\n\t\t\t\t\t$( '#ithoughts_tt_gl-tinymce-advanced_options' ).click( function showAttributesWindow() {\n\t\t\t\t\t\t$opts.show();\n\t\t\t\t\t\t$tooltip.hide();\n\t\t\t\t\t});\n\t\t\t\t\t$( '#ithoughts_tt_gl-tinymce-close-attrs' ).click( function closeDiscardAttributesWindow() {\n\t\t\t\t\t\t$opts.hide();\n\t\t\t\t\t\t$tooltip.show();\n\t\t\t\t\t});\n\t\t\t\t\t$( '#ithoughts_tt_gl-tinymce-validate-attrs' ).click( function closeAcceptAttributesWindow() {\n\t\t\t\t\t\ttooltipOpts = getOptsObject();\n\t\t\t\t\t\t$opts.hide();\n\t\t\t\t\t\t$tooltip.show();\n\t\t\t\t\t});\n\t\t\t\t\t// Bind events for the option that keep the tip opened for some times before closing\n\t\t\t\t\t$( '#qtip-keep-open' ).change( function onQtipKeepOpenChange() {\n\t\t\t\t\t\tvar modeInput = $( '#qtiptrigger' ),\n\t\t\t\t\t\t\ttextInput = $( '#qtiptriggerText' ),\n\t\t\t\t\t\t\tmtInput = $([ modeInput, textInput ]),\n\t\t\t\t\t\t\toldValue;\n\t\t\t\t\t\t// This option force the opening event to be `click`\n\t\t\t\t\t\treturn function lockQtipTrigger() {\n\t\t\t\t\t\t\tmodeInput.prop( 'disabled', this.checked );\n\t\t\t\t\t\t\ttextInput.prop( 'disabled', !this.checked );\n\t\t\t\t\t\t\tmtInput.val( this.checked ? 'click' : oldValue );\n\t\t\t\t\t\t\tif ( this.checked ) {\n\t\t\t\t\t\t\t\toldValue = modeInput.value;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tmodeInput.disabled = !( textInput.disabled = true );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t}());\n\t\t\t\t\t// Bind Position selects\n\t\t\t\t\t$( '[name^=\"position[my]\"]' ).change( function onPositionMyChange() {\n\t\t\t\t\t\tvar base = '#position[my][',\n\t\t\t\t\t\t\tinputV = $( `${ base  }1]` ),\n\t\t\t\t\t\t\tinputH = $( `${ base  }2]` ),\n\t\t\t\t\t\t\tinputsHV = $( inputH.get( 0 ), inputV.get( 0 )),\n\t\t\t\t\t\t\tinputS = $( `${ base  }invert]` );\n\t\t\t\t\t\treturn function changePositionMy() {\n\t\t\t\t\t\t\tinputsHV.prop( 'required', inputV.val() || inputH.val() || inputS.prop( 'checked' ));\n\t\t\t\t\t\t};\n\t\t\t\t\t}());\n\t\t\t\t\t$( '[name^=\"position[at]\"]' ).change( function onPositionAtChange() {\n\t\t\t\t\t\tvar base = '#position[at][',\n\t\t\t\t\t\t\tinputV = $( `${ base  }1]` ),\n\t\t\t\t\t\t\tinputH = $( `${ base  }2]` ),\n\t\t\t\t\t\t\tinputsHV = $( inputH.get( 0 ), inputV.get( 0 ));\n\t\t\t\t\t\treturn function changePositionMy() {\n\t\t\t\t\t\t\tinputsHV.prop( 'required', inputV.val() || inputH.val());\n\t\t\t\t\t\t};\n\t\t\t\t\t}());\n\t\t\t\t\t// Initialize key/value pairs\n\t\t\t\t\t$( '.kv-pair-link-attrs-add,.kv-pair-span-attrs-add' ).bind( 'mouseup touchend', function onKvPairAdd() {\n\t\t\t\t\t\tvar $container = $( this ).parent().find( '.ithoughts-attrs-container' ),\n\t\t\t\t\t\t\t$invalidInputs = $container.find( 'input:invalid' ).filter( filterPrototypeInputs ),\n\t\t\t\t\t\t\ttype = $container.attr( 'data-attr-family' );\n\t\t\t\t\t\tskip[type] = true;\n\n\t\t\t\t\t\t// Check if every empty pairs are deleted\n\t\t\t\t\t\tif ( $invalidInputs.length > 0 ) {\n\t\t\t\t\t\t\tskip[type] = true;\n\t\t\t\t\t\t\t$invalidInputs.eq( 0 ).focus();\n\t\t\t\t\t\t\tcheckRemoveAttr.call( $invalidInputs.get( 0 ));\n\t\t\t\t\t\t\tskip[type] = false;\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar $prototype = $container.find( '.ithoughts-prototype' ),\n\t\t\t\t\t\t\t$clone = $prototype.clone().removeClass( 'ithoughts-prototype' ),\n\t\t\t\t\t\t\tnewIdParts = [\n\t\t\t\t\t\t\t\t`attributes-${ type }-`,\n\t\t\t\t\t\t\t\t`-${ new Date().getTime() }`,\n\t\t\t\t\t\t\t];\n\t\t\t\t\t\t// Set the id/for attribute in the template\n\t\t\t\t\t\t$clone.find( '.dynamicId' ).each( function setForOrId() {\n\t\t\t\t\t\t\tvar $this = $( this ),\n\t\t\t\t\t\t\t\tnewId = newIdParts[0] + ( $this.hasClass( 'dynamicId-key' ) ? 'key' : 'value' ) + newIdParts[1];\n\t\t\t\t\t\t\t$this.attr( 'LABEL' === this.tagName ? 'for' : 'id', newId );\n\t\t\t\t\t\t});\n\t\t\t\t\t\t$container.append( $clone );\n\t\t\t\t\t\t// Enable inputs, then focus the first one\n\t\t\t\t\t\t$clone.find( 'input' ).prop( 'required', true ).prop( 'disabled', false ).blur( checkRemoveAttr ).eq( 0 ).focus();\n\t\t\t\t\t\tcheckRemoveAttr.call( $clone.find( 'input' ).get( 0 ));\n\t\t\t\t\t});\n\t\t\t\t\t$( '.ithoughts-attrs-container input' ).blur( checkRemoveAttr );\n\t\t\t\t\ttooltipOpts = getOptsObject();\n\t\t\t\t})();\n\n\t\t\t\t// This event listener generate a different tag with a different base url depending on the source of the video.\n\t\t\t\t$( '#mediatip_url_video_link' ).bind( 'keyup mouseup change click focusin focusout', function videoUrlChanged() {\n\t\t\t\t\tvar videodata = null,\n\t\t\t\t\t\tvalue = this.value,\n\t\t\t\t\t\tformatType;\n\t\t\t\t\t// Configure sources. See below for usage of those config objects\n\t\t\t\t\tvar formats = {\n\t\t\t\t\t\tyoutube: {\n\t\t\t\t\t\t\tregex: /^(?:https?:\\/\\/(?:youtu\\.be\\/|\\w*\\.youtube\\.\\w{2,3}\\/watch\\?v=)|<iframe .*?src=\"https?:\\/\\/\\w*\\.youtube\\.\\w{2,3}\\/embed\\/)([a-zA-Z0-9]*).*$/,\n\t\t\t\t\t\t\tembed: '<iframe width=\"512\" height=\"288\" src=\"https://www.youtube.com/embed/$1\" frameborder=\"0\" allowfullscreen></iframe>',\n\t\t\t\t\t\t\tvideo: 'https://www.youtube.com/watch?v=$1',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdailymotion: {\n\t\t\t\t\t\t\tregex: /^(?:https?:\\/\\/(?:dai\\.ly\\/|\\w*\\.dailymotion\\.\\w{2,3}\\/video\\/)|<iframe .*?src=\".*?\\w*\\.dailymotion\\.\\w{2,3}\\/embed\\/video\\/)([a-zA-Z0-9]*).*/,\n\t\t\t\t\t\t\tembed: '<iframe width=\"512\" height=\"288\" src=\"https://www.dailymotion.com/embed/video/$1\" frameborder=\"0\" allowfullscreen></iframe>',\n\t\t\t\t\t\t\tvideo: 'https://www.dailymotion.com/video/$1',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdirect: {\n\t\t\t\t\t\t\tregex: /^(.*\\.mp4)(\\?.*)?$/,\n\t\t\t\t\t\t\tembed: '<video width=\"512\" height=\"288\" controls=\"controls\"><source src=\"$1\" type=\"video/mp4\" /></video>',\n\t\t\t\t\t\t\tvideo: '$1',\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\n\t\t\t\t\t// Iterate on each configured type and try to match with one configured source\n\t\t\t\t\tfor ( var type in formats ) {\n\t\t\t\t\t\tformatType = formats[type];\n\t\t\t\t\t\t// If the regex match, then we have found our source. We can then generate the embed tag & the video url\n\t\t\t\t\t\tif ( value.match( formatType.regex )) {\n\t\t\t\t\t\t\tvideodata = {\n\t\t\t\t\t\t\t\tembed: value.replace( formatType.regex, formatType.embed ),\n\t\t\t\t\t\t\t\tvideo: value.replace( formatType.regex, formatType.video ),\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Set the form inputs with new values. Note that we refresh also the video url input to ensure a consistent formatting\n\t\t\t\t\tif ( videodata ) {\n\t\t\t\t\t\t$( '#mediatip_url_video_embed' ).val( videodata.embed );\n\t\t\t\t\t\t$( this ).val( videodata.video );\n\t\t\t\t\t}\n\t\t\t\t}).keyup();\n\n\t\t\t\t// On click on the validate button, extract all required data from the form\n\t\t\t\t$( '#ithoughts_tt_gl-tinymce-validate' ).click( function validate() {\n\t\t\t\t\tvar data = {\n\t\t\t\t\t\ttype: [ 'glossary', 'tooltip', 'mediatip' ][$( '.tabs li.active' ).index()],\n\t\t\t\t\t\ttext: $( '#ithoughts_tt_gl_text' ).val(),\n\t\t\t\t\t\tlink: $( '#ithoughts_tt_gl_link' ).val(),\n\t\t\t\t\t\topts: tooltipOpts,\n\t\t\t\t\t};\n\t\t\t\t\titge.log( 'Before per-type form data handling:', data );\n\t\t\t\t\t// Depending on the target type of the tooltip, we have to retrieve specific data\n\t\t\t\t\tswitch ( data.type ) {\n\t\t\t\t\t\tcase 'glossary': {\n\t\t\t\t\t\t\tdata = $.extend( data, {\n\t\t\t\t\t\t\t\tglossary_id:              $( '[name=\"glossary_term_id\"]' ).val(),\n\t\t\t\t\t\t\t\t// `disable_auto_translation` is related to WPML\n\t\t\t\t\t\t\t\tdisable_auto_translation: $( '[name=\"glossary_disable_auto_translation\"]' ).is( ':checked' ),\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} break;\n\n\t\t\t\t\t\tcase 'tooltip': {\n\t\t\t\t\t\t\tdata = $.extend( data, {\n\t\t\t\t\t\t\t\ttooltip_content: tinymce.EditorManager.get( 'ithoughts_tt_gl-tooltip-content' ).getContent() || $( '#ithoughts_tt_gl-tooltip-content' ).val(),\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} break;\n\n\t\t\t\t\t\tcase 'mediatip': {\n\t\t\t\t\t\t\tdata = $.extend( data, {\n\t\t\t\t\t\t\t\tmediatip_type: $( '#mediatip_type' ).val(),\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t// Mediatips has their own switch, depending on the type of media\n\t\t\t\t\t\t\tswitch ( data.mediatip_type ) {\n\t\t\t\t\t\t\t\tcase 'localimage': {\n\t\t\t\t\t\t\t\t\tdata = $.extend( data, {\n\t\t\t\t\t\t\t\t\t\tmediatip_content: $( '#image-box-data' ).val(),\n\t\t\t\t\t\t\t\t\t\tmediatip_caption: $( '#mediatip_caption' ).val(),\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t} break;\n\n\t\t\t\t\t\t\t\tcase 'webimage': {\n\t\t\t\t\t\t\t\t\tdata = $.extend( data, {\n\t\t\t\t\t\t\t\t\t\tmediatip_content: $( '#mediatip_url_image' ).val(),\n\t\t\t\t\t\t\t\t\t\tmediatip_caption: $( '#mediatip_caption' ).val(),\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t} break;\n\n\t\t\t\t\t\t\t\tcase 'webvideo': {\n\t\t\t\t\t\t\t\t\tdata = $.extend( data, {\n\t\t\t\t\t\t\t\t\t\tmediatip_content: $( '#mediatip_url_video_embed' ).val(),\n\t\t\t\t\t\t\t\t\t\tmediatip_link:    $( '#mediatip_url_video_link' ).val(),\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t} break;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} break;\n\t\t\t\t\t\t\t\t\t   }\n\t\t\t\t\tcloseForm( data );\n\t\t\t\t});\n\t\t\t\t$( '.ithoughts_tt_gl-tinymce-discard' ).click( closeForm.bind( null, null ));\n\t\t\t}());\n\t\t\t// ## List form\n\t\t} else if ( 'LIST' === formType ) {\n\t\t\t( function initListForm() {\n\t\t\t\tinitTab( $( '.tabs li' ));\n\n\t\t\t\t( function initGroupsPicker() {\n\t\t\t\t\tvar $ids = $( '#groups' ),\n\t\t\t\t\t\t$text = $( '#groups_text' ),\n\t\t\t\t\t\t$groupsPicker = $( '.groupspicker' ),\n\t\t\t\t\t\t$catchEvent = $([ $groupsPicker.get( 0 ), $text.parent().get( 0 ) ]),\n\t\t\t\t\t\t$checkboxes = $( '.groupspicker .group-select input' );\n\t\t\t\t\t$text.focusin( function onGroupsPickerFocus() {\n\t\t\t\t\t\t$groupsPicker.toggleClass( 'hidden' );\n\n\t\t\t\t\t\tfunction catchEvent( e ) {\n\t\t\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfunction hide() {\n\t\t\t\t\t\t\t$groupsPicker.toggleClass( 'hidden' );\n\t\t\t\t\t\t\t$catchEvent.off( 'click', catchEvent );\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$catchEvent.click( catchEvent );\n\t\t\t\t\t\t$w.one( 'click', hide );\n\t\t\t\t\t});\n\t\t\t\t\t// Enable glossary group checkboxes (for the group picker)\n\t\t\t\t\t$checkboxes.change( function onGroupCheckboxChanged() {\n\t\t\t\t\t\tvar $checked = $checkboxes.filter( ':checked' ),\n\t\t\t\t\t\t\ttexts = [],\n\t\t\t\t\t\t\tids = [];\n\n\t\t\t\t\t\t$checked.each( function checkedAppendToArray() {\n\t\t\t\t\t\t\ttexts.push( $( this ).parent().find( '.group-title' ).text());\n\t\t\t\t\t\t\tids.push( $( this ).val());\n\t\t\t\t\t\t});\n\t\t\t\t\t\t$ids.val( ids.join( ',' ));\n\t\t\t\t\t\t$text.val( texts.join( ', ' ));\n\t\t\t\t\t}).change();\n\t\t\t\t}());\n\n\t\t\t\t$( '#ithoughts_tt_gl-tinymce-validate' ).click( function onClickValidate() {\n\t\t\t\t\t// Compose basic infos from raw datas\n\t\t\t\t\tvar data = {\n\t\t\t\t\t\ttype:  [ 'atoz', 'list' ][$( '.tabs li.active' ).index()],\n\t\t\t\t\t\talpha: $( '#letters' ).val(),\n\t\t\t\t\t\tgroup: $( '#groups' ).val(),\n\t\t\t\t\t};\n\t\t\t\t\t// Remove useless fields\n\t\t\t\t\tif ( !data.alpha ) {\n\t\t\t\t\t\tdelete data.alpha;\n\t\t\t\t\t}\n\t\t\t\t\tif ( !data.group ) {\n\t\t\t\t\t\tdelete data.group;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Switch for particular lists (Here, atoz isn't required as it does not have any additionnal parameters. This list may be extended in the future)\n\t\t\t\t\tswitch ( data.type ) {\n\t\t\t\t\t\tcase 'list': {\n\t\t\t\t\t\t\t$.extend( data, {\n\t\t\t\t\t\t\t\tdesc: $( '#description_mode' ).val(),\n\t\t\t\t\t\t\t\tcols: $( '#columns_count' ).val(),\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} break; \n\t\t\t\t\t}\n\t\t\t\t\t// Finally, return the data\n\t\t\t\t\titge.finishListTinymce( data );\n\t\t\t\t});\n\t\t\t\t$( '.ithoughts_tt_gl-tinymce-discard' ).click( function onClickDiscard() {\n\t\t\t\t\titge.finishListTinymce();\n\t\t\t\t});\n\t\t\t}());\n\t\t}\n\t});\n})( iThoughts.v5 );\n"]}